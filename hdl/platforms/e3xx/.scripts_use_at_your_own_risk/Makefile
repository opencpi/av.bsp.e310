Configurations=\
   base \

# Add Configurations
AllConfigModes=0 1 2 3 4 5 6

ConfigModes=2

# Custom configrations is a list of all configurations that
# can be generated by create_cfgs.py. If arg-1 is provided,
# it lists the chosen ConfigModes to limit this to (instead
# of just using all of them).
CustomConfigurations=$(strip \
  $(foreach r,0 1 2,\
    $(foreach t,0 1 2,\
      $(if $(or $(filter-out 0,$r),$(filter-out 0,$t)),\
        $(foreach m,$(or $1,$(AllConfigModes)),\
          cfg_$(r)rx_$(t)tx_mode_$(m)_cmos)))))

# Append the per-mode configurations to our list
Configurations+=$(call CustomConfigurations,$(ConfigModes))
#
# If the most basic config file doesn't exist, regenerate them all
ifeq ($(filter cfgfiles,$(MAKECMDGOALS))$(filter clean%,$(MAKECMDGOALS)),)
  $(shell test -e cfg_1rx_0tx_mode_2_cmos.xml || ./create_cfgs.py $(ConfigModes))
endif

all: cfgfiles

# make rule to recreate config files
cfgfiles: $(wildcard template-configs/*.xml) create_cfgs.py e3xx.xdc e3xx_timing.xdc
	$(AT)./create_cfgs.py $(ConfigModes)

clean: cleanconfigs

# remove generated config files
cleanconfigs:
	$(AT)rm -f $(CustomConfigurations:%=%.xml);
	$(AT)for m in $(AllConfigModes); do \
	       rm -f e3xx_mimo_xcvr_mode_$${m}_cmos.xdc; \
	     done
